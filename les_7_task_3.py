"""
3. Массив размером 2m + 1, где m — натуральное число, заполнен случайным образом. Найдите в массиве медиану.
Медианой называется элемент ряда, делящий его на две равные части: в одной находятся элементы,
которые не меньше медианы, в другой — не больше медианы.

Задание решил методом сортировки. Сортировку придумал сам, хотя возможно она уже существует,
но мы ее точно не рассматривали.

Суть сортировки: пробегаемся по массиву и каждое число сохраняем под его же индексом в другом списке, в котором в финале
все числа уже будут отсортиированны, так как будут находится уже под своими индексами.
Проблема повторения чисел решается с помощью словаря.

Ограничения. Известно, что в сортируемом массиве находятся числа из строго заданного диапазона.
И необходим размер списка по длинне, равной максимальному возможному числу.
"""
import random


def position_sort(array, size=1000):
    dict_num = {}
    cash_list = [0] * size
    finish_list = []
    for number in array:
        cash_list[number] = number
        # print(cash_list)
        dict_num[number] = dict_num.get(number, 0) + 1
        # print(dict_num)
    for num in cash_list:
        if num != 0:
            for i in range(dict_num[num]):
                finish_list.append(num)
            # print(finish_list)
    return finish_list


m = 10  # Натуральное число, влияет на размер массива
size_array = 2*m + 1  # Размер массива
range_numbers = 101  # Диапазон натуральных чисел от 1 до range_numbers

array = [random.randint(1, 100) for _ in range(size_array)]  # Формируем массив из случайных натуральных чисел [1, 100]

print('Массив до сортировки: \n', array, '\n')

final_list = position_sort(array, range_numbers)

print('\nМассив после сортировки: \n', final_list)
print('\nМедиана:', final_list[len(final_list) // 2])
